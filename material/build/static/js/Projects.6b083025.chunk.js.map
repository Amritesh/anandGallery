{"version":3,"sources":["utils/router.js","constants/formNames.js","utils/form.js","routes/Projects/routes/Project/index.js","routes/Projects/components/ProjectTile/ProjectTile.js","routes/Projects/components/ProjectTile/index.js","routes/Projects/components/ProjectTile/ProjectTile.enhancer.js","routes/Projects/components/ProjectTile/ProjectTile.styles.js","routes/Projects/components/NewProjectTile/NewProjectTile.js","routes/Projects/components/NewProjectTile/index.js","routes/Projects/components/NewProjectTile/NewProjectTile.enhancer.js","routes/Projects/components/NewProjectTile/NewProjectTile.styles.js","routes/Projects/components/NewProjectDialog/NewProjectDialog.js","routes/Projects/components/NewProjectDialog/index.js","routes/Projects/components/NewProjectDialog/NewProjectDialog.enhancer.js","routes/Projects/components/NewProjectDialog/NewProjectDialog.styles.js","routes/Projects/components/ProjectsPage/ProjectsPage.js","routes/Projects/components/ProjectsPage/ProjectsPage.enhancer.js","routes/Projects/components/ProjectsPage/ProjectsPage.styles.js","routes/Projects/components/ProjectsPage/index.js"],"names":["__webpack_require__","d","__webpack_exports__","UserIsAuthenticated","UserIsNotAuthenticated","redux_auth_wrapper_history4_redirect__WEBPACK_IMPORTED_MODULE_0__","redux_auth_wrapper_history4_locationHelper__WEBPACK_IMPORTED_MODULE_1__","redux_auth_wrapper_history4_locationHelper__WEBPACK_IMPORTED_MODULE_1___default","n","history__WEBPACK_IMPORTED_MODULE_2__","components_LoadingSpinner__WEBPACK_IMPORTED_MODULE_3__","constants_paths__WEBPACK_IMPORTED_MODULE_4__","locationHelper","locationHelperBuilder","history","createHistory","connectedRouterRedirect","redirectPath","AuthenticatingComponent","LoadingSpinner","wrapperDisplayName","authenticatedSelector","_ref","auth","firebase","isEmpty","uid","authenticatingSelector","_ref2","_ref2$firebase","isInitializing","isLoaded","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","_ref3","_ref4","_ref4$firebase","state","ownProps","getRedirectQueryParam","LIST_PATH","ACCOUNT_FORM_NAME","LOGIN_FORM_NAME","SIGNUP_FORM_NAME","NEW_PROJECT_FORM_NAME","required","value","undefined","validateEmail","test","Project","path","component","Loadable","loader","e","then","bind","ProjectTile","name","onSelect","onDelete","showDelete","classes","react_default","a","createElement","Paper_default","className","root","top","onClick","Tooltip_default","title","IconButton_default","Delete_default","defaultProps","enhance","withStyles","theme","display","flexDirection","alignItems","height","width","margin","spacing","unit","padding","justifyContent","fontSize","cursor","textDecoration","transition","textOverflow","overflow","whiteSpace",":hover","color",":visited","iconStyle","NewProjectTile","AddCircle_default","style","Object","objectSpread","flexRowCenter","NewProjectDialog","handleSubmit","open","onRequestClose","Dialog_default","onClose","DialogTitle_default","id","onSubmit","inputs","DialogContent_default","Field","TextField","label","validate","DialogActions_default","Button_default","compose","reduxForm","form","onSubmitSuccess","result","props","reset","flexColumnCenter","buttons","ProjectsPage","projects","collabProjects","newDialogOpen","toggleDialog","deleteProject","addProject","match","goToProject","Switch","routes","parentProps","map","route","Route","key","concat","url","render","assign","renderChildren","ProjectRoute","exact","components_NewProjectDialog","tiles","components_NewProjectTile","project","ind","components_ProjectTile","connect","spinnerWhileLoading","firebaseConnect","params","queryParams","ordered","withRouter","withNotifications","withStateHandlers","_ref4$initialDialogOp","initialDialogOpen","_ref5","withHandlers","newInstance","showError","showSuccess","createdBy","createdAt","database","ServerValue","TIMESTAMP","catch","err","console","error","Promise","reject","projectId","remove","_ref6","paddingTop","flexGrow","boxSizing","overflowY","flexWrap","-webkit-flex-flow"],"mappings":"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","file":"static/js/Projects.6b083025.chunk.js","sourcesContent":["import { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper'\nimport { createBrowserHistory as createHistory } from 'history'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { LIST_PATH } from 'constants/paths'\n\nconst locationHelper = locationHelperBuilder({})\nconst history = createHistory()\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT'\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT'\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: '/login',\n  AuthenticatingComponent: LoadingSpinner,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    !auth.isEmpty && !!auth.uid,\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing,\n  redirectAction: newLoc => dispatch => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc)\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: {\n        message: 'User is not authenticated.'\n      }\n    })\n  }\n})\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: LoadingSpinner,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: ({ firebase: { auth } }) => auth.isEmpty,\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || LIST_PATH,\n  redirectAction: newLoc => dispatch => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc)\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: {\n        message: 'User is not authenticated.'\n      }\n    })\n  }\n})\n","export const ACCOUNT_FORM_NAME = 'account'\nexport const LOGIN_FORM_NAME = 'login'\nexport const SIGNUP_FORM_NAME = 'signup'\nexport const NEW_PROJECT_FORM_NAME = 'newProject'\n","/**\n * Returns error message if value does not exist, otherwise returns\n * undefined\n * @param {String} value - Email to validate\n * @example Required Field\n * <Field\n *   name=\"password\"\n *   component={TextField}\n *   label=\"Password\"\n *   type=\"password\"\n *   validate={required}\n * />\n */\nexport function required(value) {\n  return value ? undefined : 'Required'\n}\n\n/**\n * Returns error message if value is not a valid email, otherwise returns\n * undefined\n * @param {String} value - Email to validate\n * @example Basic\n * <Field\n *   name=\"email\"\n *   component={TextField}\n *   label=\"Email\"\n *   validate={validateEmail}\n * />\n */\nexport function validateEmail(value) {\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\n}\n","import { Loadable } from 'utils/components'\n\nexport default {\n  path: ':projectId',\n  component: Loadable({\n    loader: () =>\n      import(/* webpackChunkName: 'Project' */ './components/ProjectPage')\n  })\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport const ProjectTile = ({\n  name,\n  onSelect,\n  onDelete,\n  showDelete,\n  classes\n}) => (\n  <Paper className={classes.root}>\n    <div className={classes.top}>\n      <span className={classes.name} onClick={onSelect}>\n        {name || 'No Name'}\n      </span>\n      {showDelete && onDelete ? (\n        <Tooltip title=\"delete\">\n          <IconButton onClick={onDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n    </div>\n  </Paper>\n)\n\nProjectTile.propTypes = {\n  classes: PropTypes.object.isRequired, // from enhancer (withStyles)\n  name: PropTypes.string,\n  onSelect: PropTypes.func.isRequired,\n  onDelete: PropTypes.func,\n  showDelete: PropTypes.bool\n}\n\nProjectTile.defaultProps = {\n  showDelete: true\n}\n\nexport default ProjectTile\n","import ProjectTile from './ProjectTile'\nimport enhance from './ProjectTile.enhancer'\n\nexport default enhance(ProjectTile)\n","import { withStyles } from '@material-ui/core/styles'\nimport styles from './ProjectTile.styles'\n\nexport default withStyles(styles)\n","export default theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    height: '200px',\n    width: '300px',\n    margin: theme.spacing.unit * 0.5,\n    padding: theme.spacing.unit * 1.3\n  },\n  top: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%'\n  },\n  name: {\n    fontSize: '1.5rem',\n    cursor: 'pointer',\n    textDecoration: 'none',\n    transition: 'all 800ms cubic-bezier(0.25,0.1,0.25,1) 0ms',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    ':hover': {\n      color: ''\n    },\n    ':visited': {\n      textDecoration: 'none'\n    }\n  }\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ContentAddCircle from '@material-ui/icons/AddCircle'\nimport Paper from '@material-ui/core/Paper'\n\nconst iconSize = '6rem'\nconst iconStyle = { width: iconSize, height: iconSize }\n\nexport const NewProjectTile = ({ onClick, classes }) => (\n  <Paper className={classes.root} onClick={onClick}>\n    <ContentAddCircle style={iconStyle} />\n  </Paper>\n)\n\nNewProjectTile.propTypes = {\n  classes: PropTypes.object.isRequired, // from enhancer (withStyles)\n  onClick: PropTypes.func.isRequired\n}\n\nexport default NewProjectTile\n","import NewProjectTile from './NewProjectTile'\nimport enhance from './NewProjectTile.enhancer'\n\nexport default enhance(NewProjectTile)\n","import { withStyles } from '@material-ui/core/styles'\nimport styles from './NewProjectTile.styles'\n\nexport default withStyles(styles)\n","export default theme => ({\n  root: {\n    ...theme.flexRowCenter,\n    alignItems: 'center',\n    cursor: 'pointer',\n    height: '200px',\n    width: '300px',\n    margin: theme.spacing.unit * 0.5,\n    padding: theme.spacing.unit * 1.3,\n    overflow: 'hidden'\n  }\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { Field } from 'redux-form'\nimport { TextField } from 'redux-form-material-ui'\nimport { required } from 'utils/form'\n\nconst NewProjectDialog = ({ classes, handleSubmit, open, onRequestClose }) => (\n  <Dialog open={open} onClose={onRequestClose}>\n    <DialogTitle id=\"new-project-dialog-title\">New Project</DialogTitle>\n    <form onSubmit={handleSubmit} className={classes.inputs}>\n      <DialogContent>\n        <Field\n          name=\"name\"\n          component={TextField}\n          label=\"Project Name\"\n          validate={[required]}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onRequestClose} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button type=\"submit\" color=\"primary\">\n          Create\n        </Button>\n      </DialogActions>\n    </form>\n  </Dialog>\n)\n\nNewProjectDialog.propTypes = {\n  classes: PropTypes.object.isRequired, // from enhancer (withStyles)\n  handleSubmit: PropTypes.func.isRequired, // from enhancer (reduxForm)\n  open: PropTypes.bool.isRequired,\n  onRequestClose: PropTypes.func.isRequired\n}\n\nexport default NewProjectDialog\n","import NewProjectDialog from './NewProjectDialog'\nimport enhance from './NewProjectDialog.enhancer'\n\nexport default enhance(NewProjectDialog)\n","import { compose } from 'recompose'\nimport { reduxForm } from 'redux-form'\nimport { NEW_PROJECT_FORM_NAME } from 'constants/formNames'\nimport { withStyles } from '@material-ui/core/styles'\nimport styles from './NewProjectDialog.styles'\n\nexport default compose(\n  reduxForm({\n    form: NEW_PROJECT_FORM_NAME,\n    // Clear the form for future use (creating another project)\n    onSubmitSuccess: (result, dispatch, props) => props.reset()\n  }),\n  withStyles(styles)\n)\n","export default theme => ({\n  root: {\n    padding: theme.spacing.unit * 2\n  },\n  inputs: {\n    ...theme.flexColumnCenter\n  },\n  buttons: {\n    ...theme.flexColumnCenter\n  }\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { isEmpty } from 'react-redux-firebase'\nimport { Route, Switch } from 'react-router-dom'\nimport ProjectRoute from 'routes/Projects/routes/Project'\nimport ProjectTile from '../ProjectTile'\nimport NewProjectTile from '../NewProjectTile'\nimport NewProjectDialog from '../NewProjectDialog'\n\nconst renderChildren = (routes, match, parentProps) =>\n  routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ))\n\nexport const ProjectsPage = ({\n  projects,\n  collabProjects,\n  auth,\n  newDialogOpen,\n  toggleDialog,\n  deleteProject,\n  addProject,\n  classes,\n  match,\n  goToProject\n}) => (\n  <Switch>\n    {/* Child routes */}\n    {renderChildren([ProjectRoute], match, { auth })}\n    {/* Main Route */}\n    <Route\n      exact\n      path={match.path}\n      render={() => (\n        <div className={classes.root}>\n          <NewProjectDialog\n            onSubmit={addProject}\n            open={newDialogOpen}\n            onRequestClose={toggleDialog}\n          />\n          <div className={classes.tiles}>\n            <NewProjectTile onClick={toggleDialog} />\n            {!isEmpty(projects) &&\n              projects.map((project, ind) => (\n                <ProjectTile\n                  key={`Project-${project.id}-${ind}`}\n                  name={project.name}\n                  onSelect={() => goToProject(project.id)}\n                  onDelete={() => deleteProject(project.id)}\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    />\n  </Switch>\n)\n\nProjectsPage.propTypes = {\n  classes: PropTypes.object.isRequired, // from enhancer (withStyles)\n  match: PropTypes.object.isRequired, // from enhancer (withRouter)\n  auth: PropTypes.object, // from enhancer (connect + firebaseConnect - firebase)\n  projects: PropTypes.array, // from enhancer (connect + firebaseConnect - firebase)\n  newDialogOpen: PropTypes.bool, // from enhancer (withStateHandlers)\n  toggleDialog: PropTypes.func.isRequired, // from enhancer (withStateHandlers)\n  deleteProject: PropTypes.func.isRequired, // from enhancer (withHandlers - firebase)\n  collabProjects: PropTypes.object, // from enhancer (withHandlers - firebase)\n  addProject: PropTypes.func.isRequired, // from enhancer (withHandlers - firebase)\n  goToProject: PropTypes.func.isRequired // from enhancer (withHandlers - router)\n}\n\nexport default ProjectsPage\n","import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { LIST_PATH } from 'constants/paths'\nimport { withHandlers, withStateHandlers } from 'recompose'\nimport { withRouter } from 'react-router-dom'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withNotifications } from 'modules/notification'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\nimport styles from './ProjectsPage.styles'\n\nexport default compose(\n  // redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Map auth uid from state to props\n  connect(({ firebase: { auth: { uid } } }) => ({ uid })),\n  // Wait for uid to exist before going further\n  spinnerWhileLoading(['uid']),\n  // Create listeners based on current users UID\n  firebaseConnect(({ params, uid }) => [\n    {\n      path: 'projects',\n      queryParams: ['orderByChild=createdBy', `equalTo=${uid}`]\n    }\n  ]),\n  // Map projects from state to props\n  connect(({ firebase: { ordered } }) => ({\n    projects: ordered.projects\n  })),\n  // Show loading spinner while projects and collabProjects are loading\n  spinnerWhileLoading(['projects']),\n  // Add props.router\n  withRouter,\n  // Add props.showError and props.showSuccess\n  withNotifications,\n  // Add state and state handlers as props\n  withStateHandlers(\n    // Setup initial state\n    ({ initialDialogOpen = false }) => ({\n      newDialogOpen: initialDialogOpen\n    }),\n    // Add state handlers as props\n    {\n      toggleDialog: ({ newDialogOpen }) => () => ({\n        newDialogOpen: !newDialogOpen\n      })\n    }\n  ),\n  // Add handlers as props\n  withHandlers({\n    addProject: props => newInstance => {\n      const { firebase, uid, showError, showSuccess, toggleDialog } = props\n      if (!uid) {\n        return showError('You must be logged in to create a project')\n      }\n      return firebase\n        .push('projects', {\n          ...newInstance,\n          createdBy: uid,\n          createdAt: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          toggleDialog()\n          showSuccess('Project added successfully')\n        })\n        .catch(err => {\n          console.error('Error:', err) // eslint-disable-line no-console\n          showError(err.message || 'Could not add project')\n          return Promise.reject(err)\n        })\n    },\n    deleteProject: props => projectId => {\n      const { firebase, showError, showSuccess } = props\n      return firebase\n        .remove(`projects/${projectId}`)\n        .then(() => showSuccess('Project deleted successfully'))\n        .catch(err => {\n          console.error('Error:', err) // eslint-disable-line no-console\n          showError(err.message || 'Could not delete project')\n          return Promise.reject(err)\n        })\n    },\n    goToProject: ({ history }) => projectId => {\n      history.push(`${LIST_PATH}/${projectId}`)\n    }\n  }),\n  withStyles(styles)\n)\n","export default theme => ({\n  root: {\n    ...theme.flexColumnCenter,\n    paddingTop: theme.spacing.unit * 4,\n    flexGrow: '2',\n    boxSizing: 'border-box',\n    overflowY: 'scroll'\n  },\n  tiles: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '-webkit-flex-flow': 'row wrap'\n  }\n})\n","import ProjectsPage from './ProjectsPage'\nimport enhance from './ProjectsPage.enhancer'\n\nexport default enhance(ProjectsPage)\n"],"sourceRoot":""}